# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:   # Optional: allows manual trigger

jobs:
  backend-test:
    name: Backend Tests & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pylint

      - name: Lint backend code
        shell: bash
        run: |
          export PYTHONPATH=$PWD/backend
          pylint core api controller utils --disable=R,C,W

      - name: Run backend unit tests (if any)
        shell: bash
        run: |
          export PYTHONPATH=$PWD/backend
          pytest tests || echo "No backend tests found"

  frontend-test:
    name: Frontend Build & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Type-check TypeScript
        working-directory: frontend
        run: npm run type-check || echo "No type-check script; skipping"

      - name: Build frontend
        working-directory: frontend
        run: npm run build

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: docker build -f backend/Dockerfile -t satcom-ai-backend backend/

      - name: Build frontend image
        run: docker build -f frontend/Dockerfile -t satcom-ai-frontend frontend/
